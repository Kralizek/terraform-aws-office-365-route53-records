---
name: Deployment_test
on:
  pull_request:
    paths-ignore: 
      - '*.md'
      - 'LICENCE'
      - '.chglog/*'
      - '.pre-commit-config.yaml'
      - '.terraform-docs.yaml'
  workflow_dispatch:

jobs:
  terraform_deployment:
    runs-on: ubuntu-latest
    container:
      image: hashicorp/terraform
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2
      - name: Terraform Init
        run:
          terraform init -input=false tests/integration
      - name: Terraform Plan
        run:
          terraform plan -out=tfplan tests/integration
      - name: Terraform Apply
        run:
          terraform apply tfplan
  run_tests:
    needs: terraform_deployment
    runs-on: ubuntu-latest
    steps:
        - name: Checkout Code
          uses: actions/checkout@v2
        - name: Configure AWS Credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: eu-west-2
        - name: Install python requirements
          run: |
            pip3 install boto3
        - name: Run python tests
          run: |
            cd tests/integration/check_records
            python3 check_route53_records.py testing.systemsmystery.tech
  destroy:
    needs: [terraform_deployment, run_tests]
    if: always()
    runs-on: ubuntu-latest
    container:
      image: hashicorp/terraform
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2
      - name: Terraform Init
        run:
          terraform init -input=false tests/integration
      - name: Terraform Destroy
        if: ${{ always() }}
        run:
          terraform destroy -auto-approve tests/integration
